This tests File: base_geometry : integer_validator method
=========================================================

case 0 : import class

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>>

=========================================================

case 1 : common cases

>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)

>>> bg.integer_validator("name", "5")
Traceback (most recent call last):
	      ...
TypeError: name must be an integer
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
...
ValueError: distance must be greater than 0

=========================================================

>>> bg.integer_validator("data", [-4, 5, 3])
Traceback (most recent call last):
...
TypeError: data must be an integer


>>> bg.integer_validator("data", None)
Traceback (most recent call last):
...
TypeError: data must be an integer


>>> bg.integer_validator("data",)
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'


================================================================================
case : test area()

>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

